name: Azure Web Apps

# on: [push]
on: [workflow_dispatch]

env:
  PYTHON_ARCHITECTURE: "x64"
  PYTHON_VERSION: "3.10"

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          architecture: ${{ env.PYTHON_ARCHITECTURE }}

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          pip install -r requirements.txt --upgrade --no-cache-dir

      - name: Lint with flake8
        run: |
          flake8 app.py --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 app.py --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            ./
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Run Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Run Azure CLI
        uses: azure/CLI@v2
        with:
          inlineScript: |
            az account set --subscription ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            az webapp cors add --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} --name ${{ secrets.AZURE_RESOURCE_NAME }} --allowed-origins ${{ secrets.AZURE_RESOURCE_DNS_NAME }}
            az webapp config set --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} --name ${{ secrets.AZURE_RESOURCE_NAME }} --startup-file='gunicorn -w 2 -k uvicorn.workers.UvicornWorker app:app --timeout 60 --forwarded-allow-ips="*"'
            az webapp config appsettings set --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} --name ${{ secrets.AZURE_RESOURCE_NAME }} --settings SCM_DO_BUILD_DURING_DEPLOYMENT=true
            az webapp config appsettings set --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_NAME }} --name ${{ secrets.AZURE_RESOURCE_NAME }} --settings WEBSITE_WEBDEPLOY_USE_SCM=true

      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
          path: .

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        id: deploy-to-webapp
        with:
          app-name: ${{ secrets.AZURE_RESOURCE_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPPS_PUBLISH_PROFILE }}

  cleanup:
    runs-on: ubuntu-latest
    needs: deploy
    if: always()
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: python-app
